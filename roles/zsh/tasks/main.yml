---
- name: Install Zsh with Oh My Zsh and Powerlevel10k
  tags:
    - zsh
  block:
    - name: Install zsh and git (for oh-my-zsh)
      ansible.builtin.dnf:
        name:
          - zsh
          - git
        state: present

    - name: Install Oh My Zsh - Try curl method
      ansible.builtin.shell:  # noqa: command-instead-of-shell risky-shell-pipe
        cmd: |
          if [ ! -d /home/{{ username }}/.oh-my-zsh ]; then
            curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | sh -s -- --unattended
            chown -R {{ username }}:{{ username }} /home/{{ username }}/.oh-my-zsh
            echo "installed"
          else
            echo "already_exists"
          fi
      register: shell_omz_install
      changed_when: "'installed' in shell_omz_install.stdout"
      failed_when: false

    - name: Install Oh My Zsh - Fallback git method
      ansible.builtin.git:  # noqa: latest
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: /home/{{ username }}/.oh-my-zsh
        depth: 1
        version: master
      become: true
      become_user: "{{ username }}"
      register: omz_git_clone
      when: shell_omz_install.rc | default(1) != 0 and not omz_installed.stat.exists

    - name: Check if Oh My Zsh is installed
      ansible.builtin.stat:
        path: /home/{{ username }}/.oh-my-zsh
      register: omz_installed

    - name: Check if .zshrc exists
      ansible.builtin.stat:
        path: /home/{{ username }}/.zshrc
      register: zshrc_exists

    - name: Create basic .zshrc if it doesn't exist
      ansible.builtin.copy:
        content: |
          # Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
          if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
            source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
          fi

          # Path to your oh-my-zsh installation.
          export ZSH="$HOME/.oh-my-zsh"

          # Set name of the theme to load
          ZSH_THEME="powerlevel10k/powerlevel10k"

          # Plugins to load
          plugins=(git gradle fzf zsh-autosuggestions zsh-syntax-highlighting)

          # Source oh-my-zsh
          source $ZSH/oh-my-zsh.sh

          # To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
          [[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
        dest: /home/{{ username }}/.zshrc
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0644'
      become: true
      become_user: "{{ username }}"
      when: not zshrc_exists.stat.exists and omz_installed.stat.exists
      register: zshrc_created

    - name: Install Powerlevel10k theme
      ansible.builtin.shell:  # noqa: command-instead-of-shell risky-shell-pipe
        cmd: |
          if [ ! -d /home/{{ username }}/.oh-my-zsh/custom/themes/powerlevel10k ]; then
            git clone --depth=1 https://github.com/romkatv/powerlevel10k.git \
              /home/{{ username }}/.oh-my-zsh/custom/themes/powerlevel10k
            chown -R {{ username }}:{{ username }} /home/{{ username }}/.oh-my-zsh/custom/themes/powerlevel10k
            echo "installed"
          else
            echo "already_exists"
          fi
      register: shell_p10k_install
      changed_when: "'installed' in shell_p10k_install.stdout"

    - name: Install common zsh plugins
      ansible.builtin.shell:  # noqa: command-instead-of-shell
        cmd: |
          plugins_dir="/home/{{ username }}/.oh-my-zsh/custom/plugins"
          mkdir -p "$plugins_dir"
          changed=0

          # fzf plugin
          if [ ! -d "$plugins_dir/fzf" ]; then
            git clone https://github.com/junegunn/fzf.git "$plugins_dir/fzf"
            chown -R {{ username }}:{{ username }} "$plugins_dir/fzf"
            changed=1
          fi

          # zsh-autosuggestions
          if [ ! -d "$plugins_dir/zsh-autosuggestions" ]; then
            git clone https://github.com/zsh-users/zsh-autosuggestions "$plugins_dir/zsh-autosuggestions"
            chown -R {{ username }}:{{ username }} "$plugins_dir/zsh-autosuggestions"
            changed=1
          fi

          # zsh-syntax-highlighting
          if [ ! -d "$plugins_dir/zsh-syntax-highlighting" ]; then
            git clone https://github.com/zsh-users/zsh-syntax-highlighting "$plugins_dir/zsh-syntax-highlighting"
            chown -R {{ username }}:{{ username }} "$plugins_dir/zsh-syntax-highlighting"
            changed=1
          fi

          if [ $changed -eq 1 ]; then
            echo "changed"
          else
            echo "unchanged"
          fi
      register: shell_zsh_plugins
      changed_when: "'changed' in shell_zsh_plugins.stdout"

    - name: Update .zshrc to use Powerlevel10k theme and plugins
      ansible.builtin.lineinfile:
        path: /home/{{ username }}/.zshrc
        regexp: "^ZSH_THEME="
        line: 'ZSH_THEME="powerlevel10k/powerlevel10k"'
      when: zshrc_created is skipped or zshrc_created is changed or zshrc_exists.stat.exists
      become: true
      become_user: "{{ username }}"

    - name: Update .zshrc with common plugins
      ansible.builtin.lineinfile:
        path: /home/{{ username }}/.zshrc
        regexp: "^plugins="
        line: 'plugins=(git gradle fzf zsh-autosuggestions zsh-syntax-highlighting)'
      when: zshrc_created is skipped or zshrc_created is changed or zshrc_exists.stat.exists
      become: true
      become_user: "{{ username }}"

    - name: Add cargo bin directory to PATH in .zshrc
      ansible.builtin.lineinfile:
        path: /home/{{ username }}/.zshrc
        line: 'export PATH="$HOME/.cargo/bin:$PATH"'
        state: present
        insertafter: 'source \$ZSH/oh-my-zsh.sh'
      become: true
      become_user: "{{ username }}"

    - name: Add aliases to .zshrc
      ansible.builtin.lineinfile:
        path: /home/{{ username }}/.zshrc
        line: "{{ item }}"
        state: present
      loop:
        - "# LS Aliases"
        - "alias ls='lsd'"
        - "alias l='ls -lha'"
        - "alias la='ls -lhA'"
        - "alias ll='ls -lAFh'"
        - "alias lla='lsd -la'"
        - "alias lsa='ls -lha'"
        - "alias lt='lsd --tree'"
        - ""
        - "# General Aliases"
        - "alias c=clear"
        - ""
        - "# Build Aliases"
        - "alias mcb='mvn clean build'"
        - "alias gcb='./gradlew clean build'"
        - "alias m='make'"
        - ""
        - "# System Aliases"
        - "alias tg='topgrade'"
        - "alias dcu=\"docker-compose up\""
        - ""
        - "# Git Aliases"
        - "alias gc=\"git commit\""
        - "alias gs=\"git status\""
        - "alias gp=\"git push\""
        - "alias gl=\"git pull\""
        - "alias gco=\"git checkout\""
        - "alias gd=\"git diff\""
        - "alias gb=\"git branch\""
        - "alias ga=\"git add\""
        - "alias glo=\"git log --oneline --decorate --color\""
        - ""
        - "# NPM Aliases"
        - "alias ni=\"npm install\""
        - "alias nid=\"npm install --save-dev\""
        - "alias nig=\"npm install -g\""
        - "alias nr=\"npm run\""
        - "alias ns=\"npm start\""
        - "alias nt=\"npm test\""
        - "alias nb=\"npm run build\""
        - "alias spot='./gradlew spotlessApply'"
        - ""
        - "# Utility Aliases"
        - "alias lad=lazydocker"
      become: true
      become_user: "{{ username }}"

    - name: Set zsh as default shell
      ansible.builtin.user:
        name: "{{ username }}"
        shell: /usr/bin/zsh
